apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name | default "default-service" }}-deployment
  labels:
    app: {{ .Values.service.name }} 
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}  
      role: {{ .Values.service.role }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}  
        role: {{ .Values.service.role }}
    spec:
      containers:
        - name: {{ .Values.service.name }}  
          image: "{{ .Values.image.repository | default "default-repository" }}:{{ .Values.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          envFrom:
            - configMapRef:
                name: {{ .Values.service.name }}-config
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.service.name }}-config